name: Nightly Test Run

on:
  schedule:
    # Run at 2 AM UTC every day
    - cron: '0 2 * * *'
  # Allow manual triggering
  workflow_dispatch:

jobs:
  test:
    name: Playwright Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright Browsers
        run: npx playwright install firefox webkit --with-deps
        
      - name: Run Playwright tests
        id: run_tests
        run: |
          npx playwright test --reporter=list,json
          echo "::set-output name=test_status::$?"
        continue-on-error: true
        env:
          USER_EMAIL: ${{ secrets.USER_EMAIL }}
          USER_PASSWORD: ${{ secrets.USER_PASSWORD }}
      
      - name: Generate test summary
        if: always()
        id: test_summary
        run: |
          if [ -f playwright-report/results.json ]; then
            echo "Generating test summary from JSON report..."
            SUMMARY=$(node -e '
              const report = require("./playwright-report/results.json");
              const failed = report.suites.flatMap(suite => 
                suite.specs.filter(spec => spec.ok === false)
                  .map(spec => {
                    const testFile = suite.file.split("/").pop();
                    return `❌ ${spec.title} (${testFile})`;
                  })
              );
              
              const passed = report.suites.flatMap(suite => 
                suite.specs.filter(spec => spec.ok === true)
                  .map(spec => {
                    const testFile = suite.file.split("/").pop();
                    return `✅ ${spec.title} (${testFile})`;
                  })
              );
              
              const skipped = report.suites.flatMap(suite => 
                suite.specs.filter(spec => spec.tests.some(t => t.status === "skipped"))
                  .map(spec => {
                    const testFile = suite.file.split("/").pop();
                    return `⏭️ ${spec.title} (${testFile})`;
                  })
              );
              
              const summary = [
                `Total: ${passed.length + failed.length + skipped.length} tests`,
                `Passed: ${passed.length}`,
                `Failed: ${failed.length}`,
                `Skipped: ${skipped.length}`,
                "",
                "Failed Tests:",
                ...failed,
                "",
                "Passed Tests:",
                ...passed,
                "",
                "Skipped Tests:",
                ...skipped
              ].join("\n");
              
              console.log(summary);
            ')
            echo 'TEST_SUMMARY<<EOF' >> $GITHUB_ENV
            echo "$SUMMARY" >> $GITHUB_ENV
            echo 'EOF' >> $GITHUB_ENV
          else
            echo "No test results found!"
            echo 'TEST_SUMMARY=No test result data available.' >> $GITHUB_ENV
          fi
          
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            playwright-report/
            test-results/
          retention-days: 7

  notify:
    name: Notification
    needs: test
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Send email notification
        if: ${{ needs.test.result != 'success' }}
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.MAIL_SERVER }}
          server_port: ${{ secrets.MAIL_PORT }}
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: "⚠️ Nightly test run failed on ${{ github.repository }}"
          body: |
            The nightly test run has failed.
            
            Test Summary:
            ${{ env.TEST_SUMMARY }}
            
            For more details, check the GitHub Actions logs:
            https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          to: albertscibor@gmail.com
          from: GitHub Actions